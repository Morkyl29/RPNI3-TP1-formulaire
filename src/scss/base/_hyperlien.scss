@use "sass:color";
@use "../utilitaires/variables";

/**
* @author Prenom Nom courriel
* @todo Compléter selon l'énoncé de l'exercice
*/

// .hyperlien {
//   color: variables.$hyperlien;
//   text-decoration: none;
//   &--visited {
//     color: color.adjust(variables.$hyperlien, $lightness: -5%);
//   }
//   &--hover {
//     color: color.adjust(variables.$hyperlien, $lightness: -20%);
//     text-decoration: underline;
//   }
//   &--active {
//     color: variables.$vertLime;
//     text-decoration: underline;
//   }
// }
.etapes__ul{
  display: flex;
  flex-direction: row;
  list-style: none;
  justify-content: space-between;
  padding: 0;
  margin: 3% 5%;
  @media (min-width: 600px){
    padding: 0;
    margin: 2% 10%;
  }
}
.etapes__item {
  color: variables.$bleuFoncer;
  cursor: pointer; /* C'est la valeur par défaut */
}
.etapes__item--inactive {
  color: variables.$bleuFoncer;
  pointer-events: none; /* Les événements de pointeurs et de curseurs ne seront pas honorés */
  cursor: not-allowed; /* Autre option - cursor: default; */
  text-decoration: none; 
}
.etapes__item--active {
  color: variables.$blanc;
  text-decoration: none; 
  background-color: variables.$bleuFoncer;
  border-radius: 15px;
  padding: 10px;
}

/* 
* HORS-ÉCRAN - cacher un élément tout en le gardant accessible 
*
* Vous pouvez copier cette classe dans votre code 
* C'est une classe CSS commune mais assez complexe qui permet
* de cacher visuellement un élément sans le désactiver au niveau
* de l'arbre HTML et donc préserve son accessibilité. 
* 
* On n'oublie pas! display:none; enlève l'élément de l'arbre
* d'accessibilité alors il ne faut PAS l'utiliser  pour cacher
* un élément qui devrait être accessible. Utilisez plutôt cette classe
*/
.hors-ecran{
  position: absolute; /* Position absolue pour l'enlver du "flow" commun du document */
  width: 1px; /* 1px de large parce que zéro l'enlève de l'arbre d'accessibilité */
  height: 1px; /* 1px de haut parce que zéro l'enlève de l'arbre d'accessibilité */
  padding: 0; /* Aucun padding pour éviter que l'élément soit visible malgré sa largeur et son hauteur */
  margin: -1px; /* Marge négative de 1px pour annuler le 1px de haut et de large */
  overflow: hidden; /* Le contenu de l'élément doit ne pas dépasser du modèle de boîte (box model) pour qu'il reste invisible */
  clip-path: inset(50%); /* Un masque clip-path qui force encore plus l'invisibilité de l'élément */
  white-space: nowrap; /* Empêche les bris de ligne pour éviter que le texte de l'élément ne pousse d'autre contenu */
  border-width: 0; /* On annule aussi les bordures */
}